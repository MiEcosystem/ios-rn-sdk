'use strict';

var React = require('react-native');
var MHTableView = require('../../CommonModules/MHTableView');
var ImageButton = require('../../CommonModules/ImageButton');
var MIRequestServer = require('../../MainV2/MIRequestServer/MIRequestServer').MIRequestServer;
var MatchTool = require('../../MainV2/ConstDefine/matchTool').MatchTool;
var GateWayTool = require('../../MainV2/MIRequestServer/GateWayTool').GateWayTool;
var LocalizedStrings = require('../../Main/MHLocalizableString.js').string;
import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var {
    AppRegistry,
    StyleSheet,
    Text,
    ListView,
    View,
    Image,
    Platform,
    AlertIOS,
    TouchableHighlight,
    Component,
    Dimensions,
    PixelRatio,
} = React;






class GateWayRemoter extends Component {
    constructor(props) {
        super(props);

        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": []
        };
        this.state = {
            did: MHPluginSDK.deviceId,
            model: MHPluginSDK.deviceModel,
            apiLevel: MHPluginSDK.apiLevel,
            basePath: MHPluginSDK.basePath,
            devMode: MHPluginSDK.devMode,
            dataSource: newDataSource,
            selectGateWayID: '',                 //选中的网关ID
            devices: [],                         //网关数组
            gateWay_tool: new GateWayTool(),
        };

        console.log('GateWayRemoter---this.state:' + JSON.stringify(this.state));
    }


    handelCellArray(cellModelArray) {
        var CellArray = [];
        cellModelArray.forEach(model => {
            var title = model.name;
            var subTitle = '';

            var Model = {
                "height": 52,
                "backgroundColor": "#ffffff",
                "extra": {
                    "separatorColor": "#C0C0C0",
                    "separatorPadding": 20,
                },
                "title": {
                    "text": title,
                    "x": 22,
                    'y': 18,
                    "fontSize": 14,
                    "foregroundColor": "rgb(50,50,50)",
                },
            };
            CellArray.push(Model);
        });

        return CellArray;

    }


    handleBrands(brandArray) {


        var showTitle = LocalizedStrings.get_way_choose_tips_title;
        var cellArray = this.handelCellArray(brandArray);
        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": [
                // SectionA
                {
                    "header": {
                        "text": showTitle,
                        "height": 40,
                        "backgroundColor": "#ffffff",
                        "foregroundColor": "#808080",
                        "x": 20,
                        "fontSize": 14,
                        "fontIsBold": true,
                        "extra": {
                            "ignoreIndex": true,
                            "separatorColor": "#cccccc",
                            "separatorPadding": 20,
                        },
                    },
                    "cells": cellArray,
                }
            ]
        };

        this._tableView.reloadData(newDataSource);

    }

    componentDidMount() {
        var self = this;
        this.state.gateWay_tool.getDevices(
            function(devices) {
                /* 多个设备*/
                self.setState({ devices: devices });
                self.handleBrands(devices);
            },
            function(device) {
                /* 一个设备*/
                self.setState({ devices: [device] });
                self.handleBrands([device]);

            }, function(noDevice) {

                if (noDevice == true) {
                }
            });
    }

    render() {
        return (
            <MHTableView style={styles.table} tableName="GateWayRemoter" ref={component => this._tableView = component} onSelectRow={this._onSelectRow.bind(this)} />
        );
    }

    _onSelectRow(event) {
        /* 跳转到对码页面*/

        var row = event.nativeEvent.selectedRow;
        var device = this.state.devices[event.nativeEvent.selectedRow];
        var selectGateWayID = device.did;

        if (this.props.renderRow != undefined) {
            this.props.renderRow(device);
        }
    }



};

var screenWidth = Dimensions.get('window').width;
var screenHeight = Dimensions.get('window').height;
const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
const NavigatorBarHeight = (screenHeight == 812) ? (88) : (APPBAR_HEIGHT + 20);
const KEY_OF_MAINPAGE = 'GateWayRemoter';

var styles = StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#ffffff',
        marginBottom: 0,
        marginTop: 0,
    },

    containerView: {
        flex: 1,
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#999999',
        marginBottom: 0,
        marginTop: 0,
    },
    titleMessage: {
        fontSize: 15,
    },
    jumpBack: {

    },
    section: {
        height: 20,
        fontSize: 15,
        flexDirection: 'row',
        borderWidth: 1,
        borderColor: '#efeff0',
        borderBottomColor: '#AAA',
        color: '#979799',
        backgroundColor: '#efeff0',
    },
    sectionText: {
        marginTop: 2,
        marginLeft: 20,
        // width:200,
    },
    row: {
        marginLeft: 22,
        marginTop: 20,
        height: 44,
        fontSize: 18,
        color: '#555'

    },
    border: {
        height: 1,
        backgroundColor: '#aaaaaa'
    },
    text: {
        flex: 1,
        fontSize: 20,
        textAlign: 'center',
        color: '#000000',
        alignSelf: 'stretch',
        marginTop: 300,
    },
    table: {
        marginTop: NavigatorBarHeight,
        flex: 1,
        backgroundColor: '#f8f8f8',
    },
});


var route = {
    key: KEY_OF_MAINPAGE,
    title: '网关列表',
    component: GateWayRemoter,
    navLeftButtonStyle: {
        tintColor: 'rgb(236,236,236)',
    },
    navTitleStyle: {
        color: '#808080',
    },
    navBarStyle: {
        backgroundColor: '#f8f8f8',
    },
    isNavigationBarHidden: false,
    renderNavLeftComponent: function(route, navigator, index, navState) {
        return (
            <View style={{ left: 0, width: 29 + 15 * 2, height: APPBAR_HEIGHT, justifyContent: 'center', alignItems: 'center' }}>
                <ImageButton
                    source={{ uri: MHPluginSDK.uriNaviBackButtonImage, scale: PixelRatio.get() }}
                    onPress={() => {
                        if (index === 0) {
                            MHPluginSDK.closeCurrentPage();
                        } else {
                            navigator.pop();
                        }
                    }}
                    style={[{ width: 29, height: 29, tintColor: 'rgb(0,0,0)' }]}
                />
            </View>
        );
    },
    renderNavRightComponent: function(route, navigator, index, navState) {
        return null;
    },
}


module.exports = {
    component: GateWayRemoter,
    route: route
};
