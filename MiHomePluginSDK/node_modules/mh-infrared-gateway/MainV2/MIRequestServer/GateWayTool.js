

'use strict'
var React = require('react-native');
import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var { GATEWAT_MODEL, TYPE_WITH_MODEL } = require('../../MainV2/ConstDefine/IRV2PublicDefine');


var GateWay_Model = [
  'chuangmi.remote.v2',
  'chuangmi.remote.h102a02',
  'chuangmi.remote.h102a03',
  'chuangmi.remote.h102b01',
  'chuangmi.remote.h102b02',
  'chuangmi.remote.h102b03',
]

class GateWayTool extends React.Component {

  constructor(props, context) {
    super(props, context);
    this.state = {
    };
  }


  getDevices(isMultipleGateWay, isSingleGateWay, isNoGateWay) {

    var self = this;
    MHPluginSDK.getInfraredGatewayDevice(
      (devices) => {
        var new_Devices = this._filter_OtherDevice(devices);

        // self.devices = new_Devices;
        if (new_Devices.length > 1) {
          /* 多个设备*/
          console.log('-------GateWayTool-------isMultipleGateWay------------------- ' + JSON.stringify(new_Devices));
          isMultipleGateWay(new_Devices)
        } else if (new_Devices.length > 0) {
          /* 一个网关*/
          var device = new_Devices[new_Devices.length - 1];
          console.log('-------GateWayTool-------is SingleGateWay------------------- ' + JSON.stringify(device));
          isSingleGateWay(device)
        } else {
          /* 没有网关*/
          isNoGateWay(true);
        }

      });
  }


  // 从APP获取到的红外网关设备列表，根据创米的model过滤
  _filter_OtherDevice(devices) {
    console.log('---------devices------------------' + JSON.stringify(devices));
    console.log('---------get-Devices-Count------------------' + devices.length);
    var new_Devices = [];

    devices.forEach(element => {


      if (element.model != undefined) {
        if (GateWay_Model.indexOf(element.model) > -1) {
          new_Devices.push(element);
        }
      }
    });
    console.log('---------get-_filter_OtherDevice-Count------------------' + new_Devices.length);
    return new_Devices;
  }

  /* 判断设备是否是2代设备，用于区分，网关 内是否选择 多个网关 */
  is_insideGateWay(modelString) {
    let result = false;
    GateWay_Model.forEach(element => {

      if (element == modelString) {
        result == true;
      }
    });

    return result;
  }

}

module.exports.GateWayTool = GateWayTool;