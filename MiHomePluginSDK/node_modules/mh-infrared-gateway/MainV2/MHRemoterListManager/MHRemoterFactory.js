//
//  遥控器基类
//  MiHome
//
//  Created by Woody on 15/8/5.
//  Copyright (c) 2015年 小米移动软件. All rights reserved.
//

'use strict';

var React = require('react-native');
import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var MHRemoterBase = require('../AllRemoterModel/MHRemoterBase').MHRemoterBase;
var IRV2_DEVICE_TYPE = require('../../MainV2/ConstDefine/IRV2PublicDefine').IRV2_DEVICE_TYPE;
var IRV2Utils = require('./IRV2Utils').IRV2Utils;


/* 2.机顶盒*/
// var TopBox = require('../../MainV2/AllRemoter/TopBoxRemote');
var TopBox = require('../AllRemoterModel/MHRemoterTopBox').MHRemoterTopBox;

/* 3.空调 */
// var AirBox = require('../../MainV2/AllRemoter/AirBoxRemote');
var AirBox = require('../AllRemoterModel/MHRemoterAirBox').MHRemoterAirBox;

/* 4.风扇 */
// var ElectricFanBox = require('../../MainV2/AllRemoter/ElectricFanBoxRemote');
var ElectricFanBox = require('../AllRemoterModel/MHRemoterFan').MHRemoterFan;

/* 5.智能盒子 */
// var TopBox = require('../../MainV2/AllRemoter/TopBoxRemote');
var Box = require('../AllRemoterModel/MHRemoterBox').MHRemoterBox;

/* 6.功放 */
// var SoundBox = require('../../MainV2/AllRemoter/SoundBoxRemote');
var SoundBox = require('../AllRemoterModel/MHRemoterSound').MHRemoterSound;

/* 7.DVD */
// var DVDBox = require('../../MainV2/AllRemoter/DVDBoxRemote');
var DVDBox = require('../AllRemoterModel/MHRemoterDVD').MHRemoterDVD;

/* 8.投影仪 */
// var ProjectorBox = require('../../MainV2/AllRemoter/ProjectorBoxRemote');
var ProjectorBox = require('../AllRemoterModel/MHRemoterProjector').MHRemoterProjector;

/* 9.相机 */
// var CameraBox = require('../../MainV2/AllRemoter/CameraBoxRemote');
var CameraBox = require('../AllRemoterModel/MHRemoterCamera').MHRemoterCamera;

/* 10.灯泡 */
// var LightBox = require('../../MainV2/AllRemoter/LightBoxRemote');
var LightBox = require('../AllRemoterModel/MHRemoterLight').MHRemoterLight;

/* 10.空气净化器 */
// var AirPurifierBox = require('../../MainV2/AllRemoter/AirPurifierBoxRemote');
var AirPurifierBox = require('../AllRemoterModel/MHRemoterAirPurifier').MHRemoterAirPurifier;

/* 11.电视 */
// var TVBox = require('../../MainV2/AllRemoter/TVBoxRemote');
var TVBox = require('../AllRemoterModel/MHRemoterTV').MHRemoterTV;

/* 12.热水器 */
// var HeaterBox = require('../../MainV2/AllRemoter/HeaterBoxRemoter');
var HeaterBox = require('../AllRemoterModel/MHRemoterHeater').MHRemoterHeater;

/* 13.卫星电视机顶盒 */ 
// var SatelliteTVBox = require('../../MainV2/AllRemoter/SatelliteTVBoxRemote');
var SatelliteTVBox = require('../AllRemoterModel/MHRemoterSateliteTVBox').MHRemoterSateliteTVBox;




var {
  Component,
} = React;

/**
 * 遥控器类, 遥控器列表页展示的每一项都是一个MHRemoterBase
 **/
class MHRemoterFactory {
  static createRemoter(deviceType) {
    var remoter;


    if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_TOPBOX) {    //机顶盒

      remoter = new TopBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_TV) {  //电视

      remoter = new TVBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_BOX) { //网络盒子

      remoter = new Box();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_DVD) { //DVD

      remoter = new DVDBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_AIR_CONDITIONER) { //空调
      remoter = new AirBox();
      // remoter = new AirBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_PROJECTOR) {      //投影仪

      remoter = new ProjectorBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_PA) {     //功放

      remoter = new SoundBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_FAN) {    //风扇

      remoter = new ElectricFanBox();
    } else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_CAMERA) {  //相机

      remoter = new CameraBox();
    } 
    else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_IPTV_LIGHT) { //灯泡

      remoter = new LightBox();
    }
     else if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_PURIFIER) {   //空气净化器

      remoter = new AirPurifierBox();

    } else  if (deviceType == IRV2_DEVICE_TYPE.DEVICE_TYPE_HEATER){     //热水器

      remoter = new HeaterBox();
    }else{
      remoter = new MHRemoterBase();
    };

    return remoter;
  }

  static remoterFromJson(jsonData) {
    var valueJson = jsonData;

    var remoter = MHRemoterFactory.createRemoter(valueJson.DeviceType);
    // remoter.initWithJson(valueJson);
    return remoter;
  }
}

module.exports.MHRemoterFactory = MHRemoterFactory;
