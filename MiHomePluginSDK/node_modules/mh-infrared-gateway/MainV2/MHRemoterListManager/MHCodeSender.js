//
//  遥控器类
//  MiHome
//
//  Created by Woody on 2016/1/11.
//  Copyright (c) 2015年 小米移动软件. All rights reserved.
//

'use strict';

var React = require('react-native');
import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var IRV2KeyValue = require('../MHRemoterListManager/IRV2KeyValue').IRV2KeyValue;




var IRV2_MAX_CODE_LEN = 800;  //发送码流的最大长度

var {
  Component,
} = React;

var IRV2_API_PLAY_TJ  = "miIO.ir_play_tj";
var IRV2_API_PLAY_TJ_LONG  = "ir_play_tj_long";
var IRV2_DEVICE_MONITOR_TYPE = "irv2_device_monitor";

var mCount = 0;

/**
 * 负责发送红外码流
 **/
class MHCodeSender {
  constructor(props) {
      // super(props);

      this.props = {
        
      }
  }

  /**
   *  keyValues: {key->value}
   *  key: 要发送码流的key
   **/
  static sendCode(keyValue, callback) {
      if (keyValue == undefined) {
          console.log("MHCodeSender sendCode invalid keyValue");
          return;
      }

      if (keyValue.props.value.length <= IRV2_MAX_CODE_LEN) {
          var params = {
              "head": keyValue.props.head, 
              "freq": keyValue.props.freq, 
              "code": keyValue.props.value
          };

          MHPluginSDK.callMethod(IRV2_API_PLAY_TJ,[], {"id":++mCount, "params":params}, isSuccess => {
            if (callback) {
                callback(isSuccess);
            }
            console.log("MHCodeSender sendCode isSuccess=", isSuccess);
          });  
      } else {
          MHCodeSender.sendCodeInSection(0, keyValue, callback);
      }    
  }  

  /**
   *  按Section发送码流
   *  section: 要发送的码流的section
   **/
  static sendCodeInSection(curSection, keyValue, callback) { 
      if (keyValue == undefined) {
          return;
      }

      var totalSection = IRV2KeyValue.getSectionCount(keyValue.props.value, IRV2_MAX_CODE_LEN);
      var codeToSent = IRV2KeyValue.getCodeOfSection(curSection, totalSection, keyValue.props.value, IRV2_MAX_CODE_LEN);
      if (codeToSent.length) {
        var params = {
          "head": keyValue.props.head, 
          "freq": keyValue.props.freq, 
          "code": codeToSent,
          "current" : curSection+1,
          "total" : totalSection
        };

        MHPluginSDK.callMethod(IRV2_API_PLAY_TJ_LONG, [], {"id":++mCount, "params":params}, isSuccess => {
          if (isSuccess) {
            if (curSection + 1 == totalSection) {
              //成功且结束了
              if (callback) {
                callback(isSuccess);
              }
              console.log("MHCodeSender sendCodeInSection succeed and finished");
            } else {
              //成功但未结束
              console.log("MHCodeSender sendCodeInSection succeed but not finished");
              MHCodeSender.sendCodeInSection(curSection+1, keyValue, callback);
              
            }
          } else {
            //失败了
            console.log("MHCodeSender sendCodeInSection failed");
            if (callback) {
              callback(isSuccess);
            }
          }
        });  
      }
  }  

    /**
   * 空调发送码流
   * key:string 标识发送哪个键的码流
   */
  static sendAirInfraredMatchCode(key, remoter, currentState, timerValue, callback) {
      if(remoter == undefined){
          return;
      }

      var total = remoter.keys.length;
      // 根据key的名称返回相应的红外数组
      var infrared = IRV2KeyValue.getInfraredFromKey(key, remoter);

      if (key=='timer') {
        alert('发送红外码值');
      } else {
        alert('发送红外码值');
      }   
  }
  
}

module.exports.MHCodeSender = MHCodeSender;