'use strict';

var React = require('react-native');
var MHTableView = require('../../../CommonModules/MHTableView');
var ImageButton = require('../../../CommonModules/ImageButton');
var MIRequestServer = require('../../../MainV2/MIRequestServer/MIRequestServer').MIRequestServer;
var NewTopBoxLogic = require('../../../MainV2/TopBoxLogic/NewTopBoxLogic');
var MessageToast = require('../../../MainV2/ToolModel/MessageToast');
var SearchFilter = require('../../../MainV2/BrandList/SearchFilter');
var LocalizedStrings = require('../../../Main/MHLocalizableString.js').string;

var {
    AppRegistry,
    StyleSheet,
    Text,
    ListView,
    View,
    Image,
    Platform,
    ActivityIndicator,
    AlertIOS,
    Dimensions,
    TouchableHighlight,
    Component,
    TextInput,
    PixelRatio,
} = React;


import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var subscription;
var brandIdMap = {};
var sourceData = [];

class CityAreaList extends Component {
    constructor(props) {
        super(props);

        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": []
        };
        this.state = {
            did: MHPluginSDK.deviceId,
            model: MHPluginSDK.deviceModel,
            apiLevel: MHPluginSDK.apiLevel,
            basePath: MHPluginSDK.basePath,
            requestStatus: false,
            deviceType: this.props.deviceType,
            devMode: MHPluginSDK.devMode,
            dataSource: newDataSource,
            city_name: this.props.city_name,
            city_id: this.props.city_id,
            areas: [],
        };
    }

    handelCellArray(cellModelArray) {
        var CellArray = [];
        cellModelArray.forEach(model => {
            var title = model.name;
            var subTitle = '';

            var Model = {
                "height": 52,
                "backgroundColor": "#ffffff",
                "extra": {
                    "separatorColor": "#C0C0C0",
                    "separatorPadding": 20,
                },
                "title": {
                    "text": title,
                    "x": 22,
                    'y': 18,
                    "fontSize": 14,
                    "foregroundColor": "rgb(50,50,50)",
                },
            };
            CellArray.push(Model);
        });

        return CellArray;
    }

    handleBrands(brandArray) {

        var cellArray = this.handelCellArray(brandArray);
        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": [
                // SectionA
                {
                    "header": {
                        "text": "请选择运营商",
                        "height": 40,
                        "backgroundColor": "#ffffff",
                        "foregroundColor": "#808080",
                        "x": 20,
                        "fontSize": 14,
                        "fontIsBold": true,
                        "extra": {
                            "ignoreIndex": true,
                            "separatorColor": "#cccccc",
                            "separatorPadding": 20,
                        },
                    },
                    "cells": cellArray,
                }
            ]
        };

        this._tableView.reloadData(newDataSource);

    }

    getBrandDataSource() {

        var self = this;
        var param = {
            "city_id": this.state.city_id,
        };

        MIRequestServer.Post_GetAllAreaList(param,
            function(response) {
                if (response.result.areas != undefined) {
                    var dataArray = response.result.areas;
                    sourceData = dataArray;
                    self.setState({ areas: dataArray });
                    self.handleBrands(dataArray);
                }

            }, function(error) {
                self.refs.toast.showMessage(LocalizedStrings.ir_toast_get_data_failed);
            });

    }

    componentDidMount() {
        /* 获取数据源*/
        this.getBrandDataSource();
    }

    render() {
        return (
            <View style={styles.container}>
                <MessageToast ref='toast' />
                <View style={styles.searchView}>
                    <View style={styles.searchContentView}>
                        <View style={styles.searchImageView}>
                            <Image style={styles.searchImage}
                                source={{ isStatic: !MHPluginSDK.devMode, uri: MHPluginSDK.basePath + 'ControllerImage/search.png' }}
                            />
                        </View>
                        <View style={styles.searchInputView}>
                            <TextInput style={styles.searchInput}
                                returnKeyType="search"
                                placeholder={LocalizedStrings.search_device}
                                onFocus={() => this.searchOnFocus()} />
                        </View>
                    </View>
                </View>
                <MHTableView style={styles.table} tableName="CityAreaList" ref={component => this._tableView = component} onSelectRow={this._onSelectRow.bind(this)} />
            </View>
        )
    }

    _onSelectRow(event) {
        /* 跳转到对码页面*/
        var self = this;
        var row = event.nativeEvent.selectedRow;
        var rowData = this.state.areas[row];
        self.pushTo_MatchRemoter(rowData);
    }

    pushTo_GateWayRemoter(rowData) {

        /* rowData cell 数据 */
        self.pushTo_MatchRemoter(rowData);
    }


    pushTo_MatchRemoter(rowData) {
        /* rowData cell {"id":110102,"name":"西城区","city_id":0} 数据 */
        /* device 网关数据 */
        console.log('--------rowData:' + JSON.stringify(rowData));
        var newRowData = { "area_id": rowData.id, "city_id": this.state.city_id, "name": (this.state.city_name + rowData.name) };

        var self = this;
        if (self.props.selectedRow != undefined) {
            self.props.selectedRow(newRowData);
            /* 跳转回特定页面*/
            var routes = self.props.navigator.getCurrentRoutes();
            let destinationRoute;
            for (let i = 0; i < (routes.length); i++) {

                var remoterModel = routes[i];
                if (routes[i].key === 'NewTopBoxLogic') {
                    destinationRoute = this.props.navigator.getCurrentRoutes()[i]
                }
            }
            if (destinationRoute != undefined) {
                self.props.navigator.popToRoute(destinationRoute);
            }
        }

    }


    searceFilter_selectCell(event) {
        /* event ={"id":310101,"name":"黄浦区","city_id":0} */

        /* 跳转到对码页面*/
        var self = this;
        var rowData = event;
        self.pushTo_GateWayRemoter(rowData);

    }

    searchOnFocus() {

        var self = this;
        this.props.navigator.push({
            ...SearchFilter.route,
            passProps: {
                dataArray: sourceData,
                selectedRow: function(event) {
                    console.log('CityAreaList---searchOnFocus--------------' + JSON.stringify(event));
                    self.searceFilter_selectCell(event);
                }
            }
        });
    }




};

var screenWidth = Dimensions.get('window').width;
var screenHeight = Dimensions.get('window').height;
const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
const NavigatorBarHeight = (screenHeight == 812) ? (88) : (APPBAR_HEIGHT + 20);
const KEY_OF_MAINPAGE = 'CityAreaList';

const searchViewHeight = 50;
var styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f8f8f8',
        marginBottom: 0,
        marginTop: 0,
    },
    searchInputView: {
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchInput: {
        flex: 1,
        width: screenWidth - 40 - 8,
        height: searchViewHeight - 10,
    },
    searchView: {
        marginTop: NavigatorBarHeight,
        width: screenWidth,
        height: searchViewHeight,
        backgroundColor: 'rgb(238,238,238)',
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchContentView: {
        padding: 5,
        flexDirection: 'row',
        width: screenWidth - 15,
        height: searchViewHeight - 15,
        backgroundColor: '#ffffff',
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
        borderRadius: 5,
    },
    searchImageView: {
        width: 40,
        height: searchViewHeight - 8,
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchImage: {
        width: 18,
        height: 18,
    },
    table: {
        marginTop: 0,
        flex: 1,
        backgroundColor: '#f8f8f8',
    },
});

var route = {
    key: KEY_OF_MAINPAGE,
    title: '运营商列表',
    component: CityAreaList,
    navLeftButtonStyle: {
        tintColor: 'rgb(236,236,236)',
    },
    navTitleStyle: {
        color: '#808080',
    },
    navBarStyle: {
        backgroundColor: '#f8f8f8',
    },
    isNavigationBarHidden: false,
    renderNavLeftComponent: function(route, navigator, index, navState) {
        return (
            <View style={{ left: 0, width: 29 + 15 * 2, height: APPBAR_HEIGHT, justifyContent: 'center', alignItems: 'center' }}>
                <ImageButton
                    source={{ uri: MHPluginSDK.uriNaviBackButtonImage, scale: PixelRatio.get() }}
                    onPress={() => {
                        if (index === 0) {
                            MHPluginSDK.closeCurrentPage();
                        } else {
                            navigator.pop();
                        }
                    }}
                    style={[{ width: 29, height: 29, tintColor: 'rgb(0,0,0)' }]}
                />
            </View>
        );
    },
    renderNavRightComponent: function(route, navigator, index, navState) {
        if (MHPluginSDK.userId == MHPluginSDK.ownerId) // 非分享设备
        {
            return (
                <View style={{ left: 0, width: 29 + 15 * 2, height: APPBAR_HEIGHT, justifyContent: 'center', alignItems: 'center' }}>
                    <ImageButton
                        source={{ uri: MHPluginSDK.uriNaviMoreButtonImage, scale: PixelRatio.get() }}
                        onPress={() => {
                            // openMorePage(navigator);

                        }}
                        style={[{ width: 29, height: 29, tintColor: 'rgb(0,0,0)' }]}
                    />
                </View>
            );
        }
        else {
            return null;
        }
    },
}


module.exports = {
    component: CityAreaList,
    route: route
};
