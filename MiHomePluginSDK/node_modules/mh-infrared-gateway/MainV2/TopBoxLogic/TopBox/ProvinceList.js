'use strict';

var React = require('react-native');
var MHTableView = require('../../../CommonModules/MHTableView');
var ImageButton = require('../../../CommonModules/ImageButton');
var MIRequestServer = require('../../../MainV2/MIRequestServer/MIRequestServer').MIRequestServer;
var MatchTool = require('../../../MainV2/ConstDefine/matchTool').MatchTool;
var CityList = require('../../../MainV2/TopBoxLogic/TopBox/CityList');
var MessageToast = require('../../../MainV2/ToolModel/MessageToast');
var SearchFilter = require('../../../MainV2/BrandList/SearchFilter');
var LocalizedStrings = require('../../../Main/MHLocalizableString.js').string;


var {
    AppRegistry,
    StyleSheet,
    Text,
    ListView,
    View,
    Image,
    Platform,
    Dimensions,
    ActivityIndicator,
    AlertIOS,
    TextInput,
    TouchableHighlight,
    Component,
    PixelRatio,
} = React;


import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var subscription;
var brandIdMap = {};
var sourceData = [];

class ProvinceList extends Component {
    constructor(props) {
        super(props);

        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": []
        };
        this.state = {
            did: MHPluginSDK.deviceId,
            model: MHPluginSDK.deviceModel,
            apiLevel: MHPluginSDK.apiLevel,
            basePath: MHPluginSDK.basePath,
            requestStatus: false,
            deviceType: this.props.deviceType,
            devMode: MHPluginSDK.devMode,
            dataSource: newDataSource,
            provinces: [],
        };
    }

    handleBrands(brandArray) {

        /*
        { "id": 2,
        "name": "创维", 
        */

        if (brandArray.length == 0) {
            return;
        }
        var allData = [];
        var sectionDict = {}; //包含{"_name":[], cells":{}}

        for (var i = 0; i < brandArray.length; i++) {

            var name = brandArray[i]['name'];//获取拼接 品牌名称
            var id = brandArray[i]['id'];
            var indexName = MatchTool.getIndexName(name);//索引

            var indexChar = '';
            if (indexName.length > 0) {
                indexChar = indexName.charAt(0);
            }// 太长截取

            if (!sectionDict[indexChar]) {
                sectionDict[indexChar] = [];
            }//不存在 则添加

            var nameArray = sectionDict[indexChar];//空数组
            var tmpDict = {
                'jsTitle': name,
                'id': id,
                'fullName': name,
            };//字典
            nameArray.push(tmpDict); // 所有品牌数组 

        }


        var keys = Object.keys(sectionDict);//获取所有ABCDEFG 的key
        keys.sort();//排序

        // console.log('sectionDict:'+JSON.stringify(sectionDict));
        // console.log('keys:'+JSON.stringify(keys));

        for (var i = 0; i < keys.length; i++) {
            var indexChar = keys[i];
            var nameArray = sectionDict[indexChar];
            nameArray.sort(function(a, b) { return a['name'] == b['name'] });// nuKnow
            var cellDict = [];

            for (var nameIndex = 0; nameIndex < nameArray.length; nameIndex++) {
                cellDict.push({
                    "id": nameArray[nameIndex]['id'],
                    "height": 52,
                    "backgroundColor": "#f8f8f8",
                    "extra": {
                        "separatorColor": "#cccccc",
                        "separatorPadding": 22,
                    },

                    "title": {
                        "text": nameArray[nameIndex]['fullName'],
                        "x": 22,
                        'y': 18,
                        "fontSize": 15,
                        "foregroundColor": "#4d4d4d",
                    },
                    "jsTitle": nameArray[nameIndex]['jsTitle'],
                });
            }


            allData.push(
                {
                    "header": {
                        "text": keys[i],//sectionArray[sectionIndex],
                        "height": 52,
                        "backgroundColor": "#f8f8f8",
                        "foregroundColor": "#b2b2b2",
                        'fontIsBold': true,
                        "x": 22,
                        "fontSize": 11,
                        "extra": {
                            "ignoreIndex": false,//sectionIndex == 0,
                            "separatorColor": "#cccccc",
                            "separatorPadding": 22,
                        }
                    },

                    "cells": cellDict,
                },
            );
        }

        var newDataSource = {
            "index": {
                "foregroundColor": "#666666",
            },
            "sections": allData
        };

        // console.log('allData.length:'+JSON.stringify(allData.length));
        this._tableView.reloadData(newDataSource);

    }


    getBrandDataSource() {

        var self = this;
        MIRequestServer.Post_GetAllProvinceList(undefined,
            function(response) {
                console.log('Post_GetAllProvinceList:' + JSON.stringify(response));
                if (response.result.provinces != undefined) {
                    var provinces = response.result.provinces;
                    sourceData = provinces
                    self.setState({ provinces: provinces });
                    self.handleBrands(provinces);
                }

            }, function(error) {
                self.refs.toast.showMessage(LocalizedStrings.ir_toast_get_data_failed);
            });

    }


    componentDidMount() {
        /* 获取数据源*/
        this.getBrandDataSource();
    }

    render() {
        return (
            <View style={styles.container}>
                <MessageToast ref='toast' />
                <View style={styles.searchView}>
                    <View style={styles.searchContentView}>
                        <View style={styles.searchImageView}>
                            <Image style={styles.searchImage}
                                source={{ isStatic: !MHPluginSDK.devMode, uri: MHPluginSDK.basePath + 'ControllerImage/search.png' }}
                            />
                        </View>
                        <View style={styles.searchInputView}>
                            <TextInput style={styles.searchInput}
                                returnKeyType="search"
                                placeholder={LocalizedStrings.search_device}
                                onFocus={() => this.searchOnFocus()} />
                        </View>
                    </View>
                </View>
                <MHTableView style={styles.table} tableName="ProvinceList" ref={component => this._tableView = component} onSelectRow={this._onSelectRow.bind(this)} />
            </View>
        )
    }

    _onSelectRow(event) {
        /* 跳转到对码页面*/

        var dataSource = this._tableView.getDataSource();
        var obj = dataSource["sections"][event.nativeEvent.selectedSection]["cells"][event.nativeEvent.selectedRow];
        if (this.props.selectedRow != undefined) {
            this.props.selectedRow(obj);
        }
    }




    searchOnFocus() {

        var self = this;
        this.props.navigator.push({
            ...SearchFilter.route,
            passProps: {
                dataArray: sourceData,
                selectedRow: function(event) {
                    if (self.props.selectedRow != undefined) {
                        self.props.selectedRow(event);
                    }
                }
            }
        });
    }
};

var screenWidth = Dimensions.get('window').width;
var screenHeight = Dimensions.get('window').height;
const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
const NavigatorBarHeight = (screenHeight == 812) ? (88) : (APPBAR_HEIGHT + 20);
const KEY_OF_MAINPAGE = 'ProvinceList';

const searchViewHeight = 50;
var styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f8f8f8',
        marginBottom: 0,
        marginTop: 0,
    },
    searchInputView: {
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchInput: {
        flex: 1,
        width: screenWidth - 40 - 8,
        height: searchViewHeight - 10,
    },
    searchView: {
        marginTop: NavigatorBarHeight,
        width: screenWidth,
        height: searchViewHeight,
        backgroundColor: 'rgb(238,238,238)',
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchContentView: {
        padding: 5,
        flexDirection: 'row',
        width: screenWidth - 15,
        height: searchViewHeight - 15,
        backgroundColor: '#ffffff',
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
        borderRadius: 5,
    },
    searchImageView: {
        width: 40,
        height: searchViewHeight - 8,
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center',
    },
    searchImage: {
        width: 18,
        height: 18,
    },
    table: {
        marginTop: 0,
        flex: 1,
        backgroundColor: '#f8f8f8',
    },
});



var route = {
    key: KEY_OF_MAINPAGE,
    title: '省市列表',
    component: ProvinceList,
    navLeftButtonStyle: {
        tintColor: 'rgb(236,236,236)',
    },
    navTitleStyle: {
        color: '#808080',
    },
    navBarStyle: {
        backgroundColor: '#f8f8f8',
    },
    isNavigationBarHidden: false,
    renderNavLeftComponent: function(route, navigator, index, navState) {
        return (
            <View style={{ left: 0, width: 29 + 15 * 2, height: APPBAR_HEIGHT, justifyContent: 'center', alignItems: 'center' }}>
                <ImageButton
                    source={{ uri: MHPluginSDK.uriNaviBackButtonImage, scale: PixelRatio.get() }}
                    onPress={() => {
                        if (index === 0) {
                            MHPluginSDK.closeCurrentPage();
                        } else {
                            navigator.pop();
                        }
                    }}
                    style={[{ width: 29, height: 29, tintColor: 'rgb(0,0,0)' }]}
                />
            </View>
        );
    },
    renderNavRightComponent: function(route, navigator, index, navState) {
        if (MHPluginSDK.userId == MHPluginSDK.ownerId) // 非分享设备
        {
            return (
                <View style={{ left: 0, width: 29 + 15 * 2, height: APPBAR_HEIGHT, justifyContent: 'center', alignItems: 'center' }}>
                    <ImageButton
                        source={{ uri: MHPluginSDK.uriNaviMoreButtonImage, scale: PixelRatio.get() }}
                        onPress={() => {
                            // openMorePage(navigator);

                        }}
                        style={[{ width: 29, height: 29, tintColor: 'rgb(0,0,0)' }]}
                    />
                </View>
            );
        }
        else {
            return null;
        }
    },
}


module.exports = {
    component: ProvinceList,
    route: route
};
