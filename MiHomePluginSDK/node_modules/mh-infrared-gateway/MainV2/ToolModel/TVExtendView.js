'use strict';

var React = require('react-native');

var {
  AppRegistry,
  StyleSheet,
  Text,
  TouchableHighlight,
  Image,
  View,
  Component,
  TextInput,
  PixelRatio,
  StatusBar,
  TouchableOpacity,
  Platform,
  ScrollView,
  Dimensions,

  DeviceEventEmitter,
} = React;

import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var Button = require('../../CommonModules/Button');
var TitleButton = require('../../CommonModules/TitleButton');

var screenWidth = Dimensions.get('window').width;
var screenHeight = Dimensions.get('window').height;
const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
const NavigatorBarHeight = (screenHeight==812)?(88):( APPBAR_HEIGHT +20);

 class TVExtendView extends React.Component {
  constructor(props, context) {
    super(props, context);

    this.state = {
      did: MHPluginSDK.deviceId,
      model: MHPluginSDK.deviceModel,
      apiLevel: MHPluginSDK.apiLevel,
      basePath: MHPluginSDK.basePath,
      requestStatus: false,
      clicked: 'none',
      devMode: MHPluginSDK.devMode,
      cloumnCount: 3,
      totalCount: this.props.totalCount,
      allKeys :this.props.dataSource,
    };
  }

  render() {

    return (
      <View style={styles.containerAll} >
         <View style={styles.numberView} >
            {/* 第一行 */}
            <View style={styles.rowView} >
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('1')}} enabled={this.isButtonEnabled('1')} shock ={true} imageNormal="NewNumberImage/number_1_normal.png" imageHighlight='NewNumberImage/number_1_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('2')}} enabled={this.isButtonEnabled('2')} shock ={true} imageNormal="NewNumberImage/number_2_normal.png" imageHighlight='NewNumberImage/number_2_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('3')}} enabled={this.isButtonEnabled('3')} shock ={true} imageNormal="NewNumberImage/number_3_normal.png" imageHighlight='NewNumberImage/number_3_press.png' imageWidth={60} imageHeight={60} />
                  </View>
            </View>
            {/* 第二行 */}
            <View style={styles.rowView} >
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('4')}} enabled={this.isButtonEnabled('4')} shock ={true} imageNormal="NewNumberImage/number_4_normal.png" imageHighlight='NewNumberImage/number_4_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('5')}} enabled={this.isButtonEnabled('5')} shock ={true} imageNormal="NewNumberImage/number_5_normal.png" imageHighlight='NewNumberImage/number_5_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('6')}} enabled={this.isButtonEnabled('6')} shock ={true} imageNormal="NewNumberImage/number_6_normal.png" imageHighlight='NewNumberImage/number_6_press.png' imageWidth={60} imageHeight={60} />
                  </View>
            </View>
            {/* 第三行 */}
            <View style={styles.rowView} >
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('7')}} enabled={this.isButtonEnabled('7')} shock ={true} imageNormal="NewNumberImage/number_7_normal.png" imageHighlight='NewNumberImage/number_7_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('8')}} enabled={this.isButtonEnabled('8')} shock ={true} imageNormal="NewNumberImage/number_8_normal.png" imageHighlight='NewNumberImage/number_8_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('9')}} enabled={this.isButtonEnabled('9')} shock ={true} imageNormal="NewNumberImage/number_9_normal.png" imageHighlight='NewNumberImage/number_9_press.png' imageWidth={60} imageHeight={60} />
                  </View>
            </View>
            {/* 第四行 */}
            <View style={styles.rowView} >
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('-/--')}} enabled={this.isButtonEnabled('-/--')} shock ={true} imageNormal="NewNumberImage/other_normal.png" imageHighlight='NewNumberImage/other_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressButton('0')}} enabled={this.isButtonEnabled('0')} shock ={true} imageNormal="NewNumberImage/number_0_normal.png" imageHighlight='NewNumberImage/number_0_press.png' imageWidth={60} imageHeight={60} />
                  </View>
                  <View style={styles.buttonView} >
                    <Button  onPress={()=>{this.onPressBackButton('back')}}  shock ={true} imageNormal="NewNumberImage/number_back_normal.png" imageHighlight='NewNumberImage/number_back_press.png' imageWidth={60} imageHeight={60} />
                  </View>
            </View>
         </View>

      </View>
    );
  }

  onPressButton(event){
    if(this.props.onPressButton !=undefined){
      console.log('onPressButton-TVExtendView-inside--------'+event);
      this.props.onPressButton(event);
    }
  }

  onPressBackButton(event){

    if(this.props.onPressBackButton !=undefined){
      this.props.onPressBackButton(event);
    }
  }

  isButtonEnabled(event){

     var key_id = undefined;
      this.state.allKeys.forEach(element => {
          if(element.name==event){
            key_id = element.id;
          }
      });

      if(key_id!=undefined){
        return true;
      }else{
        return false;
      }
    
  }

  componentWillMount() {
    
  }

  componentWillUnmount() {

  }
}

const contentViewWidth = screenWidth-2*20;
const itemWidth = contentViewWidth/3.0;
const itemHeight = itemWidth * 0.7;


const directionHeight = screenWidth*0.8;
var styles = StyleSheet.create({
  containerAll:{
    flex:1,
    flexDirection:'column',
    alignItems:'center',
    alignSelf:'center',

    flexWrap:'wrap',
  },
  numberView:{
    flexDirection:'column',
    width:contentViewWidth,
    justifyContent:'center',
  },
  rowView:{
    flexDirection:'row',
    alignItems:'center',
    alignSelf:'center',
    justifyContent:'center',
  },
  buttonView:{
    width:itemWidth,
    height:itemHeight,
    justifyContent:'center',
    alignItems:'center',
    alignSelf:'center',
  },
});



module.exports = TVExtendView;