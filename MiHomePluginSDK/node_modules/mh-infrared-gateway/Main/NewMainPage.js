'use strict';

var React = require('react-native');

var {
  AppRegistry,
  StyleSheet,
  Text,
  TouchableHighlight,
  Image,
  View,
  TextInput,
  PixelRatio,
  StatusBar,
  Dimensions,
  TouchableOpacity,
  Platform,
  DeviceEventEmitter,
} = React;

import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var Setting = require('./MHSetting');
var ControlDemo = require('./ControlDemo');
var MyProduct = require('./MyProduct');
var CloudDebug = require('./CloudDebug');
var ImageButton = require('../CommonModules/ImageButton');



var ScreenWidth = Dimensions.get('window').width
var Screeneight = Dimensions.get('window').height

const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;

class NewMainPage extends React.Component {
  constructor(props, context) {
    super(props, context);

    this.state = {
      requestStatus: false,
    };
  }

  render() {
    //alert(this.state.basePath);

    return (
      <View style={{flex:1}}>
       
      </View>
    );
  }

// 没有设备的情况
  defaultView(){
    return(
     
      <View style={styles.containerAll} >
        <StatusBar barStyle='light-content' />
        <View style={styles.containerIconDemo}>
          <Image style={styles.iconDemo} source={this.props.app.sourceOfImage("control_home.png")} />
          <Text style={styles.iconText}>欢迎使用小米开发板</Text>
        </View>
        <View style={styles.containerMenu}></View>
    </View>
    );
  }


  emptyList(){
    return(


      <View style={emptystyles.addRemoterRowContainer}>
            <View style={emptystyles.addRemoterImageContainer}>
              <TouchableHighlight underlayColor='#838383' onPress={this._pressSearch.bind(this)}>
                <Image style={emptystyles.addRemoterImage} source={{isStatic:!this.state.devMode, uri:this.state.basePath + "Main/search_normal.png"}}/>
              </TouchableHighlight>
            </View>
            <Text style={emptystyles.addRemoterTitle}>型号搜索</Text>
            <Text style={emptystyles.addRemoterDetail}>通过输入遥控器背后的型号实现匹配并控制</Text>
  

          <View style={emptystyles.addRemoterRowContainer}>
            <View style={emptystyles.addRemoterImageContainer} >
              <TouchableHighlight underlayColor='#838383' onPress={this._pressAdd.bind(this)}>
                <Image style={emptystyles.addRemoterImage} source={{isStatic:!this.state.devMode, uri:this.state.basePath + "Main/add_normal.png"}}/>
              </TouchableHighlight>
            </View>
            <Text style={emptystyles.addRemoterTitle}>添加遥控器</Text>
            <Text style={emptystyles.addRemoterDetail}>跟随引导，通过简单的使用尝试，实现控制</Text>
          </View>

          <View style={emptystyles.addRemoterRowContainer}>
            <View style={emptystyles.addRemoterImageContainer}>
              <TouchableHighlight underlayColor='#838383' onPress={this._pressReproduce.bind(this)}>
                <Image style={emptystyles.addRemoterImage} source={{isStatic:!this.state.devMode, uri:this.state.basePath + "Main/reproduce_normal.png"}}/>
              </TouchableHighlight>
            </View>
            <Text style={emptystyles.addRemoterTitle}>复制遥控器</Text>
            <Text style={emptystyles.addRemoterDetail}>对遥控器上的按键命令逐一复制，实现控制</Text>
          </View>
        </View>
    );
  }

  //设备列表
  deviceList(){
    return(

      <View style={styles.containerAll} >
      <StatusBar barStyle='light-content' />
      <View style={styles.containerIconDemo}>
        <Image style={styles.iconDemo} source={this.props.app.sourceOfImage("control_home.png")} />
        <Text style={styles.iconText}>欢迎使用小米开发板</Text>
      </View>
      <View style={styles.containerMenu}>
      </View>
    </View>
    );
  }


  _pressSearch() {
    // console.log("search remoter clicked!");
    MHPluginSDK.openPage("SearchRemoter", true, "搜索遥控器", true, {});
  }

  _pressAdd() {
    console.log("add remoter clicked!");
    // MHPluginSDK.openPage("AddRemoter", true, "匹配遥控器", true, {remoterListManager:this.props.remoterManager});
    this.props.navigator.push({
                                title: "匹配遥控器",
                                component: AddRemoter,
                                leftButtonIcon: {isStatic:true, uri:MHPluginSDK.uriNaviBackButtonImage, scale:PixelRatio.get()},
                                onLeftButtonPress: () => this.props.navigator.pop(),
                                passProps: {remoterListManager:this.props.remoterManager}
                                });
  }

  _pressReproduce() {
    this.props.navigator.push({
                                title: "复制遥控器",
                                component: ReproduceRemoter,
                                leftButtonIcon: {isStatic:true, uri:MHPluginSDK.uriNaviBackButtonImage, scale:PixelRatio.get()},
                                onLeftButtonPress: () => this.props.navigator.pop(),
                                passProps: {remoterListManager:this.props.remoterManager}
                                });
  }



  componentWillMount() {
    this._deviceNameChangedListener = DeviceEventEmitter.addListener(MHPluginSDK.deviceNameChangedEvent, (event) => {
      route.title = event.newName;
      this.forceUpdate();
    });
  }

  componentWillUnmount() {
    this._deviceNameChangedListener.remove();
  }
}

var styles = StyleSheet.create({
  containerAll: {
    flex: 1,
    flexDirection: 'column',
    backgroundColor: '#838383',
    marginTop: 0,
  },
  containerIconDemo: {
    flex: 1.7,
    flexDirection: 'column',
    backgroundColor: '#191919',
    alignSelf: 'stretch',
    justifyContent: 'center',
  },
  containerMenu: {
    flex: 1,
    flexDirection: 'column',
    backgroundColor: '#ffffff',
    alignSelf: 'stretch',
  },
  iconDemo: {
    width: 270,
    height: 181,
    alignSelf: 'center',
  },
  iconText: {
    fontSize: 20,
    textAlign: 'center',
    color: '#ffffff',
    marginTop: 20,
    alignSelf: 'center'
  },
  rowContainer: {
    alignSelf: 'stretch',
    flexDirection: 'row',
    flex: 1,
  },
  title: {
    fontSize: 17,
    alignItems: 'center',
    alignSelf: 'center',
    color: '#000000',
    flex: 1,
    marginLeft:15
  },
  subArrow: {
     width: 9,
     height: 17,
     marginRight: 15,
    alignSelf: 'center',
  },
  separator: {
     height: 0.5,
     alignSelf: 'stretch',
     backgroundColor: '#dddddd',
     marginLeft:15,
     marginRight: 15,
  },
});


var emptystyles = StyleSheet.create({
    //没有遥控器的首页用的
    addRemoterRowContainer: {
      flex: 1,
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
    },
    addRemoterImageContainer: {
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: 42,
      overflow: 'hidden',
    },
    addRemoterImage: {
      alignSelf: 'center',
      width: 84,
      height: 84,
    },
    addRemoterTitle: {
      fontSize: 15,
      alignSelf: 'center',
      marginTop: 12,
    },
    addRemoterDetail: {
      fontSize: 11,
      alignSelf: 'center',
      marginTop: 6,
    },
});


const KEY_OF_MAINPAGE = 'NewMainPage';

// 打开更多菜单
var openMorePage = function (navigator) {
  navigator.push(Setting.route);
};

// 每个页面export自己的route
var route = {
  key: KEY_OF_MAINPAGE,
  title: MHPluginSDK.deviceName,
  component: NewMainPage,
  navLeftButtonStyle: {
    tintColor:'#ffffff',
  },
  navTitleStyle: {
    color:'#ffffff',
  },
  navBarStyle: {
    backgroundColor:'transparent',
  },
  isNavigationBarHidden: false,
  renderNavRightComponent: function(route, navigator, index, navState) {
    if (MHPluginSDK.userId == MHPluginSDK.ownerId) // 非分享设备
    {
      return (
        <View style={{left:0, width:29+15*2, height:APPBAR_HEIGHT, justifyContent:'center', alignItems:'center'}}>
          <ImageButton
            source={{uri:MHPluginSDK.uriNaviMoreButtonImage, scale:PixelRatio.get()}}
            onPress={() => {
              openMorePage(navigator);
            }}
            style={[{width:29, height:29, tintColor: '#ffffff'}]}
          />
        </View>
      );
    }
    else {
      return null;
    }
  },
}

module.exports = {
  component: NewMainPage,
  route: route,
}
