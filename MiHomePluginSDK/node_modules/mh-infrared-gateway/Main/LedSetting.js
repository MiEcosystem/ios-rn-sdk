'use strict';

var React = require('react-native');

var {
    StyleSheet,
    Text,
    View,
    Component,
    StatusBar,
    SwitchIOS,
    Dimensions,
} = React;

import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var LocalizedStrings = require('./MHLocalizableString.js').string;
let APPBAR_MARGINTOP = 0;
let APPBAR_MARGINBOTTOM = 0;
if (MHPluginSDK.systemInfo.mobileModel === "iPhone10,3" || MHPluginSDK.systemInfo.mobileModel === "iPhone10,6") {
    APPBAR_MARGINTOP = 24;
    APPBAR_MARGINBOTTOM=34;
}

var screenWidth = Dimensions.get('window').width;
var screenHeight = Dimensions.get('window').height;
class LedSetting extends Component {

    constructor(props) {
        super(props);
        this.state = {
            wifi_led: true
        };
    }

    componentDidMount = () => {
        MHPluginSDK.showLoadingTips(LocalizedStrings.ios_sting_3);
        MHPluginSDK.callMethod('get_indicatorLamp', [], {"params": []}, (isSuccess, json) => {
            //alert(JSON.stringify(json));
            console.log("getled:"+JSON.stringify(json));
            if (isSuccess) {
                this.setState({
                    wifi_led: json.result[0] == "on" ? true : false
                });
            }
            MHPluginSDK.dismissTips();
        });
    }

    switchValueChange = (value) => {

        MHPluginSDK.showLoadingTips(LocalizedStrings.ios_sting_4);
        var  param = {"params": [value?"on":"off"]};
        
        console.log('param----------'+JSON.stringify(param));
        MHPluginSDK.callMethod('set_indicatorLamp', [], param, (isSuccess, json) => {
            
            console.log("get_indicatorLamp" + isSuccess + JSON.stringify(json));
            MHPluginSDK.dismissTips();
            if (isSuccess) {
                this.setState({
                    wifi_led: value
                });
            }else{
                this.setState({
                    wifi_led: !value
                });
            }

        });

    }


    render() {
        return (
            <View style={styles.container}>
                <StatusBar barStyle='default'/>
                <View style={{height: 1, marginTop: 64+APPBAR_MARGINTOP}}></View>
                <View style={{width:screenWidth,backgroundColor:'#ffffff'}}>
                    <View style={styles.rowContainer}>
                        <Text style={styles.title}>{LocalizedStrings.ir_led_switch}</Text>
                        <SwitchIOS onValueChange={(value) => this.switchValueChange(value)}
                                   onTintColor={"#1ad605"} value={this.state.wifi_led}
                                   tintColor={"rgb(235,235,235)"}/>
                    </View>
                    <View style={styles.separator}></View>
                </View>
            </View>
        );
    }


};

var styles = StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#f8f8f8'
    },
    rowContainer: {
        alignSelf: 'stretch',
        flexDirection: 'row',
        flex: 1,
        backgroundColor: '#ffffff',
        height: 50,
        marginLeft: 20,
        marginRight: 20,
        alignItems: 'center'
    },
    title: {
        fontSize: 16,
        flex: 1,
    },
    subArrow: {
        width: 9,
        height: 18,
    },
    separator: {
        height: 0.75,
        backgroundColor: '#dddddd',
        marginLeft: 20,
        marginRight:0,
    }
});

var route = {
    key: 'LedSetting',
    title: LocalizedStrings.ios_sting_5,
    component: LedSetting,
    navLeftButtonStyle: {
        tintColor:'#000000',
      },
    navTitleStyle: {
        color:'#808080',
      },
    navBarStyle: {
        backgroundColor:'#f8f8f8',
      },
    renderNavRightComponent: function (route, navigator, index, navState) {
        return (<View/>);
    },
}

module.exports = {
    component: LedSetting,
    route: route,
}
