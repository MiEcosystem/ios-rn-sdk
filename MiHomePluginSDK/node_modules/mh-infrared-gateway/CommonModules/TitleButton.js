/**
 * 通用的Button控件
 *
 * 引用：var Button = require('../CommonModules/Button');
 *
 * 使用演示示例：
 * <Button onPress={this._handlePress} title="测试"
 *   imageWidth={64} imageHeight={64} titleSize={14}/>
 *
 * 参数说明：
 * title：按钮显示名称，可以省略
 * titleSize：按钮显示名称文字大小，可以省略，默认14
 */
'use strict';

var React = require('react-native');

var {
  PropTypes,
  StyleSheet,
  Text,
  TouchableHighlight,
  Component,
  View,
  Image
} = React;

import { NativeModules } from 'react-native';
var MHPluginSDK = NativeModules.MHPluginSDK;
var coalesceNonElementChildren = require('./coalesceNonElementChildren');

var systemButtonOpacity = 0.2;

class TitleButton extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
          ...TouchableHighlight.propTypes,
          disabled: PropTypes.bool,
          style: Text.propTypes.style,
          textColor:this.props.textColor,
          ButtonHighlightColor:this.props.ButtonHighlightColor,
          titleSize: 14,
          studyEnable:false,
        };
    }

    componentDidMount() {
        if (this.props.titleSize>0) {
          this.setState({titleSize: this.props.titleSize });
        }
        if(this.props.textColor>0){
          this.setState({textColor: this.props.textColor});
        }
        if(this.props.ButtonHighlightColor>0){
          this.setState({ButtonHighlightColor: this.props.ButtonHighlightColor});
        }
        if(this.props.studyEnable==true){
          this.setState({textColor:'#00ae58'});
        }
    }

    componentWillUnmount() {
    }

    componentWillReceiveProps(props){
      if(props.studyEnable==true){
        this.setState({textColor:'#00ae58'});
      }
      if(props.textColor!=undefined){
        this.setState({textColor:props.textColor});
      }


    }

    render() {
        var viewProps = {
          style: ([styles.base, this.props.style]: ?Array<any>),
        };
        var touchableProps = viewProps;
        var opacityValue = this.props.opacityValue;

        // 按钮不可用
        if (this.props.enabled == false) {
            touchableProps = {};
            opacityValue = 0.4;
        } else {
            var that = this;
            touchableProps.onPress = this.props.onPress;
            touchableProps.onPressIn = function() {
              if(that.props.ButtonHighlightColor!=null){

                // console.log('------------------onPressIn--------------------');
                that.setState({ButtonHighlightColor: that.props.ButtonHighlightColor });
              }
            };
            touchableProps.onPressOut = function() {
              if(that.props.textColor!=null){
                // console.log('------------------onPressOut--------------------');
                that.setState({textColor: that.props.textColor,ButtonHighlightColor:'#ffffff'});
              }
            };
            touchableProps.onLongPress = this.props.onLongPress;

            opacityValue = 1.0;
        }

        if (this.props.title!=null) {

            return (
              <TouchableHighlight {...touchableProps} underlayColor={this.props.highlightColor ? this.props.highlightColor : "transparent"} style={[{opacity: opacityValue,alignSelf: 'center'}]}>
                  <View style={[styles.defaultView,this.props.style,{backgroundColor:this.state.ButtonHighlightColor}]}  {...viewProps}>
                      <View style={[styles.contentView]}>
                        <Text style={[styles.text, {fontSize: this.state.titleSize,color:this.state.textColor, opacity: opacityValue}]}>{this.props.title}</Text>
                      </View>
                  </View>
              </TouchableHighlight>
            );
        }

    }

};

var styles = StyleSheet.create({
  defaultView: {
    flex:1,
    flexDirection:'column',
    justifyContent:'center',
    alignItems:'center',
    alignSelf:'center',
  },
  contentView:{
    flex:1,
    flexDirection:'column',
    justifyContent:'center',
    alignSelf: 'center',
    alignItems:'center',
  },
  text: {
    marginLeft:0,
    marginRight:0,
    color: '#000000',
  },
  disabledText: {
    color: '#dcdcdc',
  },
  group: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
});

module.exports = TitleButton;
